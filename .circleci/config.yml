version: 2.1

docker_defaults: &docker_defaults
  docker:
    - image: circleci/node:8.14.0

commands:
  prep_env:
    description: Prepares environment with cache
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          name: Restore node_modules cache
          key: all-contributors-{{ checksum "yarn.lock" }}-{{ .Branch }}
  save_env_cache:
    description: Saves environment cache
    steps:
      - save_cache:
          name: Save node_modules cache
          key: all-contributors-{{ checksum "yarn.lock" }}-{{ .Branch }}
          paths:
            - node_modules/

jobs:
  node_modules:
    <<: *docker_defaults
    working_directory: ~/repo
    steps:
      - prep_env
      - run: cat package.json | jq 'del(.scripts.postinstall)' > package.json.tmp && mv package.json.tmp package.json
      - run: yarn install --frozen-lockfile
      - save_env_cache
  build:
    <<: *docker_defaults
    working_directory: ~/repo
    steps:
      - prep_env
      - run:
          name: Install crowdin
          command: |
              sudo apt-get install default-jre
              wget https://artifacts.crowdin.com/repo/deb/crowdin.deb -O crowdin.deb
              sudo dpkg -i crowdin.deb
      - run:
          name: Build website
          command: |
            yarn write-translations
            yarn crowdin-upload
            yarn crowdin-download
            yarn build
      - persist_to_workspace:
          root: ~/repo
          paths:
            - website/build/all-contributors/
  deploy_preview_website:
    <<: *docker_defaults
    working_directory: ~/repo
    steps:
      - prep_env
      - attach_workspace:
          at: ~/repo
      - run:
          name: Deploy preview site
          command: yarn netlify deploy
  deploy_production_website:
    <<: *docker_defaults
    working_directory: ~/repo
    steps:
      - prep_env
      - attach_workspace:
          at: ~/repo
      - run:
          name: Deploy production
          command: yarn netlify deploy --prod
      - run:
          name: Semantic release to NPM and GitHub releases
          command: yarn run semantic-release

  check_404s:
    <<: *docker_defaults
    working_directory: ~/repo
    steps:
      - prep_env
      - run:
          name: Wait to hit CDN edges
          command: sleep 60
      - run:
          name: Check 404s production
          command: yarn blc https://allcontributors.org -ro || true

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - node_modules
      - build:
          requires:
            - node_modules
      - deploy_preview_website:
          requires:
            - build
          filters:
            branches:
              ignore:
                - master
      - deploy_production_website:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - check_404s:
          requires:
            - deploy_production_website

experimental:
  notify:
    branches:
      only:
        - master
