version: 2.1

docker_defaults: &docker_defaults
  docker:
    - image: circleci/node:12.0.0

commands:
  prep_env:
    description: Prepares environment with cache
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          name: Restore node_modules cache
          key: all-contributors-{{ checksum "yarn.lock" }}-{{ .Branch }}
  save_env_cache:
    description: Saves environment cache
    steps:
      - save_cache:
          name: Save node_modules cache
          key: all-contributors-{{ checksum "yarn.lock" }}-{{ .Branch }}
          paths:
            - node_modules/

jobs:
  node_modules:
    <<: *docker_defaults
    working_directory: ~/repo
    steps:
      - prep_env
      - run: yarn install --frozen-lockfile
      - save_env_cache
  publish_release:
    <<: *docker_defaults
    working_directory: ~/repo
    steps:
      - prep_env
      - run:
          name: Don't allow install of package, when published
          command: cat package.json | jq '.scripts.postinstall = "node index.js"' > package.json.tmp && mv package.json.tmp package.json
      - run:
          name: Semantic release to NPM and GitHub releases
          command: yarn run semantic-release

  check_404s:
    <<: *docker_defaults
    working_directory: ~/repo
    steps:
      - prep_env
      - run:
          name: Wait to hit CDN edges
          command: sleep 500
      - run:
          name: Check 404s production
          command: yarn blc https://allcontributors.org -ro || true

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - node_modules:
          filters:
            branches:
              only:
                - master
      - publish_release:
          requires:
            - node_modules
          filters:
            branches:
              only:
                - master
      - check_404s:
          requires:
            - publish_release
          filters:
            branches:
              only:
                - master

experimental:
  notify:
    branches:
      only:
        - master
